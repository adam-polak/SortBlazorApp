@page "/Sorting"
@rendermode InteractiveServer
@inject IJSRuntime JS

<PageTitle>Sorting</PageTitle>

<div class="container">
    @foreach (int i in bars) {
        int top = amount - i;
        string marginTop = "" + top + "vh";
        string height = "" + i + "vh";
        <div class="bar" style="margin-top:@marginTop;height:@height;"></div>
    }
</div>
<div class="btnContainer">
    <button @onclick="MakeList">New List</button>
    <button @onclick="SortBars">Sort</button>
</div>

@code {
    int num = 0;
    private static int amount = 50;
    int[] bars = new int[amount];
    
    private void MakeList() {
        num = 0;
        bars = new int[amount];
        Random rnd = new Random();
        for(int i = 0; i < amount; i++) {
            bars[i] = rnd.Next(1, 50);
        }
    }

    private async void SortBars() {
        if(num == amount) {
            Console.WriteLine("\nDONE");
            return;
        }
        if(bars[amount - 1] == 0) return;
        
        InsertionSort(num++);
        Thread.Sleep(100);
        Console.Write("|");
        await InvokeAsync(StateHasChanged);
        await Task.Yield();
        SortBars();
    }

    private int InsertionSort(int index) {
        int b = 0;
        while(b < index) {
            if(bars[index] < bars[b]) {
                int s = index;
                int temp = bars[index];
                while(s > b) {
                    bars[s] = bars[s - 1];
                    s--;
                }
                bars[b] = temp;
                break;
            }
            b++;
        }

    return b;
    }
}